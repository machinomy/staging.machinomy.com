---
- hosts: all
  gather_facts: true

  vars:
    nodejs_version: "6"
    debian_repo_version: "6.x"
    hub_name: hub.machinomy.com
    site_name: staging.machinomy.com
    site_dir: /home/vagrant/ynos/dist
    letsencrypt_email: sergey.ukustov@machinomy.com
    yarn_version: '0.27.5'
    machinomy_path: '~/machinomy'
    ynos_path: '~/ynos'
    staging_path: '~/staging'

  environment:
    NODE_ENV: vagrant

  tasks:
    - apt:
        name: g++
      become: true

    - name: Install  software-properties-common
      apt:
        name: software-properties-common
        update_cache: yes
      become: true

    - name: Set up ethereum PPA
      apt_repository:
        repo: "ppa:ethereum/ethereum"
        update_cache: yes
      become: true

    - name: Install geth
      apt:
        name: ethereum
      become: true

    - name: Ensure the system can use the HTTPS transport for APT
      stat:
        path: /usr/lib/apt/methods/https
      register: apt_https_transport

    - name: Install HTTPS transport for APT
      apt:
        pkg: apt-transport-https
        state: installed
      when: not apt_https_transport.stat.exists

    - name: Import the NodeSource GPG key into apt
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present
      become: yes

    - name: Add NodeSource deb repository
      apt_repository:
        repo: 'deb https://deb.nodesource.com/node_{{ debian_repo_version }} {{ ansible_distribution_release }} main'
        state: present
      become: yes

    - name: Add NodeSource deb-src repository
      apt_repository:
        repo: 'deb-src https://deb.nodesource.com/node_{{ debian_repo_version }} {{ ansible_distribution_release }} main'
        state: present
      become: yes

    - name: Install Node.js
      apt:
        pkg:
          - nodejs={{ nodejs_version }}*
        state: installed
        update_cache: yes
      become: yes

    - file:
        path: ~/.machinomy
        state: directory

    - copy:
        src: files/config.json
        dest: ~/.machinomy/config.json

    - file:
        path: ~/.staging
        state: directory

    - copy:
        src: files/config_geth.json
        dest: ~/.staging/config_geth.json

    - name: Install nginx
      apt:
        pkg: nginx
        state: installed
      become: yes

    - name: Deactivate the default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      become: yes

    - name: Copy the site config
      template:
        src: templates/site.conf.j2
        dest: "/etc/nginx/sites-available/{{site_name}}.conf"
      become: yes

    - name: Activate the site
      file:
        src: "/etc/nginx/sites-available/{{site_name}}.conf"
        dest: "/etc/nginx/sites-enabled/{{site_name}}.conf"
        state: link
      become: yes

    - name: Copy the hub config
      template:
        src: templates/hub.conf.j2
        dest: "/etc/nginx/sites-available/{{hub_name}}.conf"
      become: yes

    - name: Activate the hub
      file:
        src: "/etc/nginx/sites-available/{{hub_name}}.conf"
        dest: "/etc/nginx/sites-enabled/{{hub_name}}.conf"
        state: link
      become: yes

    - name: Configure the Yarn APT key
      apt_key: url=https://dl.yarnpkg.com/debian/pubkey.gpg
      become: yes

    - name: Add Yarn repository
      apt_repository:
        repo: 'deb https://dl.yarnpkg.com/debian/ stable main'
        state: present
      become: yes

    - name: Install Yarn
      apt: pkg=yarn state=present
      become: yes

    - name: Install gulp
      npm:
        name: "{{item}}"
        global: yes
      with_items:
        - gulp
        - webpack
        - pm2
      become: yes

    - name: Creates directory
      file:
       path: "/etc/letsencrypt/live/{{site_name}}"
       state: directory
      become: yes

    - name: create self-signed SSL cert
      command: openssl req -new -nodes -x509 -subj "/C=US/ST=Oregon/L=Portland/O=IT/CN=${ansible_fqdn}" -days 3650 -keyout /etc/letsencrypt/live/{{site_name}}/privkey.pem -out /etc/letsencrypt/live/{{site_name}}/fullchain.pem -extensions v3_ca creates=/etc/letsencrypt/live/{{site_name}}/fullchain.pem
      become: yes

    - name: Restart nginx
      service:
        name: nginx
        state: restarted
      become: yes
